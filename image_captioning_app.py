import gradio as grimport numpy as npfrom PIL import Imagefrom transformers import AutoProcessor, BlipForConditionalGeneration# Load the pretrained processor and modelprocessor = AutoProcessor.from_pretrained("Salesforce/blip-image-captioning-base")model = BlipForConditionalGeneration.from_pretrained("Salesforce/blip-image-captioning-base")def generate_caption(input_image: np.ndarray):    # Convert the image to RGB format if it's not already    raw_image = Image.fromarray(input_image).convert('RGB')    # Prepare the inputs for the model    text = "the image of"    inputs = processor(images=raw_image, text=text, return_tensors="pt")    # Generate a caption for the image    outputs = model.generate(**inputs, max_length=100)    # Decode the generated tokens to text    caption = processor.decode(outputs[0], skip_special_tokens=True)    return captioninterface = gr.Interface(    fn=generate_caption,    inputs=gr.Image(type="numpy", label="Upload an Image"),    outputs=gr.Textbox(label="Generated Caption"),    title="Image Captioning with BLIP",    description="Upload an image to generate a caption using the BLIP model.",)# Launch the Gradio interfaceinterface.launch(server_name="127.0.0.1", server_port=7860)